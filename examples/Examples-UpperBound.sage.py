"""
 *  Verification of endomorphism rings
 *
 *  Copyright (C) 2016-2017
 *            Edgar Costa      (edgarcosta@math.dartmouth.edu)
 *            Davide Lombardo  (davide.lombardo@math.u-psud.fr)
 *            Jeroen Sijsling  (jeroen.sijsling@uni-ulm.de)
 *
 *  See LICENSE.txt for license details.
"""

# This file was *autogenerated* from the file Examples-UpperBound.sage
from sage.all_cmdline import *   # import sage library

_sage_const_100 = Integer(100); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_5 = Integer(5)
# Hyperelliptic tests:
R = PolynomialRing(QQ, names=('x',)); (x,) = R._first_ngens(1)
#F.<r> = NumberField(x^2 - 2)
#R.<x> = PolynomialRing(F)

# Curve input: specify g and h in its equation y^2 + h y = g.

# Debug largest genus 2 case:
f = x**_sage_const_5 -_sage_const_1 
h = R(_sage_const_0 )

C = HyperellipticCurve(f,h)

End = EndomorphismData(C,_sage_const_100 ,have_oldenburg=true)

print "Numerically computed algebra:", End.geometric().algebra()

print "Upper bound on the Z-rank of End(Jac(C)) over QQbar:", CurveRankBound(C)

